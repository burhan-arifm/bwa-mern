// strict variables
$column-amount: 12;
$row-amount: 4;

// colors
$cornflower-blue : #3252DF !default;
$blue-zodiac    : #152C5B !default;
$wild-strawberry: #FF498B !default;

// overriding bootstrap defaults
$primary  :     $cornflower-blue !default;
$secondary:     $blue-zodiac !default;

$body-color:     $blue-zodiac !default;

$font-family-sans-serif:      "Poppins", sans-serif !default;

// bootstrap essentials
@import "~bootstrap/scss/functions";
@import "~bootstrap/scss/variables";
@import "~bootstrap/scss/mixins";

// fonts
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;200;300;400;500;600;700;800;900&display=swap');

$h1-font-size:                $font-size-base * 2.625 !default;

// theme colors
$theme-colors: map-merge(
  $theme-colors,
  (
    "primary"         : $cornflower-blue,
    "secondary"       : $blue-zodiac,
    "cornflower-blue" : $cornflower-blue,
    "blue-zodiac"     : $blue-zodiac,
    "wild-strawberry" : $wild-strawberry,
    "gray-100"        : $gray-100,
    "gray-200"        : $gray-200,
    "gray-300"        : $gray-300,
    "gray-400"        : $gray-400,
    "gray-500"        : $gray-500,
    "gray-600"        : $gray-600,
    "gray-700"        : $gray-700,
    "gray-800"        : $gray-800,
    "gray-900"        : $gray-900
  )
);

// bootstrap modules
@import "~bootstrap/scss/root";
@import "~bootstrap/scss/reboot";
@import "~bootstrap/scss/type";
@import "~bootstrap/scss/images";
@import "~bootstrap/scss/grid";
@import "~bootstrap/scss/buttons";
@import "~bootstrap/scss/nav";
@import "~bootstrap/scss/navbar";
@import "~bootstrap/scss/utilities/display";
@import "~bootstrap/scss/utilities/position";
@import "~bootstrap/scss/utilities/screenreaders";
@import "~bootstrap/scss/utilities/sizing";
@import "~bootstrap/scss/utilities/spacing";
@import "~bootstrap/scss/utilities/stretched-link";
@import "~bootstrap/scss/utilities/text";

// additional element styles
h1, .h1 {
  line-height: 3.9375rem;
}

.btn {
  min-height: 3.125rem;
}

header, section {
  margin-bottom: 3.125rem;
}

.container-grid {
  display: grid;
  grid-template-columns: repeat($column-amount, 1fr);
  grid-auto-rows: minmax(11.5625rem, auto);
  grid-auto-flow: dense;
  row-gap: 1.875rem;
  column-gap: 1.875rem;
  position: relative;
  z-index: 3;

  &.sm {
    grid-auto-rows: minmax(15.625rem, auto);
    row-gap: 0.625rem;
    column-gap: 0.625rem;
  }

  .item {
    @if $column-amount > 0 {
      @for $iteration from 1 through $column-amount {
        &.column-#{$iteration} {
          grid-column-end: span $iteration;
        }
      }
    }

    @if $row-amount > 0 {
      @for $iteration from 1 through $row-amount {
        &.rowline-#{$iteration} {
          grid-row-end: span $iteration;
        }
      }
    }
  }
}

.img-cover {
  object-fit: cover;
  height: 100%;
  width: 100%;
}

.img-contain {
  object-fit: contain;
  height: 100%;
  width: 100%;
}

// only for debugging
@each $color, $value in $theme-colors {
  .borderize-#{$color} {
    border: 2px solid $value;
    border-radius: $border-radius*3.75;
  }
}

// component styles
@import "./button.scss";
@import "./iconText.scss";
@import "./card-text.scss";

// part styles
@import "./header.scss";
@import "./hero.scss";
