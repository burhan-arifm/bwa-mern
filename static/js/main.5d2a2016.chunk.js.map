{"version":3,"sources":["images/ic_traveler.svg","images/ic_cities.svg","images/ic_treasure.svg","images/img-hero.jpg","components/button.js","components/iconText.js","sections/header.js","sections/hero.js","components/card-text.js","sections/most-picked.js","sections/categories.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","className","onClick","isPrimary","push","isSmall","isLarge","isBlock","hasShadow","isDisabled","isLoading","join","style","children","type","isExternal","href","target","undefined","rel","to","IconText","Header","location","getNavLinkClass","path","pathname","Hero","data","reference","numberFormat","number","Intl","NumberFormat","format","id","window","scrollTo","top","current","offsetTop","behavior","width","height","src","IconTraveler","alt","travelers","IconTreasure","treasures","IconCities","cities","backgroundImage","ImageHero","CardText","mostPicked","isPopular","_id","price","unit","imageUrl","name","city","country","MostPicked","ref","map","item","index","key","Categories","category","index1","items","length","index2","Home","refMostPicked","React","createRef","this","HomeData","hero","categories","Component","App","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5d2a2016.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ic_traveler.109e18e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_cities.bc95ea70.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_treasure.bb259d86.svg\";","module.exports = __webpack_public_path__ + \"static/media/img-hero.c21ecd2e.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport propTypes from \"prop-types\";\n\nexport default function Button(props) {\n    const className = [props.className];\n    const onClick = () => { if(props.onClick) props.onClick() };\n\n    if(props.isPrimary) className.push(\"btn-primary\");\n    if(props.isSmall) className.push(\"btn-sm\");\n    if(props.isLarge) className.push(\"btn-lg\");\n    if(props.isBlock) className.push(\"btn-block\");\n    if(props.hasShadow) className.push(\"btn-shadow\");\n    if (props.isDisabled || props.isLoading) {\n        if(props.isDisabled) className.push(\"disabled\");\n\n        return (\n            <span className={className.join(\" \")} style={props.style}>\n                {\n                    props.isLoading ? (\n                        <>\n                            <span className=\"spinner-border spinner-border-sm mx-5\"></span>\n                            <span className=\"sr-only\">Loading...</span>\n                        </>\n                    ) : (props.children)\n                }\n            </span>\n        );\n    }\n    if (props.type === \"link\") {\n        if (props.isExternal) {\n            return (\n                <a href={props.href} className={className.join(\" \")} style={props.style} target={props.target===\"_blank\"?\"_blank\":undefined} rel={props.target===\"_blank\"?\"noopener noreferrer\":undefined}>\n                    { props.children }\n                </a>\n            );\n        } else {\n            return (\n                <Link to={props.href} className={className.join(\" \")} style={props.style} onClick={onClick}>\n                    { props.children }\n                </Link>\n            );\n        }\n    }\n\n    return (\n        <button className={className.join(\" \")} style={props.style} onClick={onClick}>\n            { props.children }\n        </button>\n    );\n}\n\nButton.propTypes = {\n    type: propTypes.oneOf([\"button\",\"link\"]),\n    onClick: propTypes.func,\n    target: propTypes.string,\n    className: propTypes.string,\n    isPrimary: propTypes.bool,\n    isSmall: propTypes.bool,\n    isLarge: propTypes.bool,\n    isBlock: propTypes.bool,\n    hasShadow: propTypes.bool,\n    isDisabled: propTypes.bool,\n    isLoading: propTypes.bool,\n    isExternal: propTypes.bool\n};","import React from 'react';\nimport Button from \"./button\";\n\nexport default function IconText() {\n  return (\n    <div>\n      <Button className=\"brand-text-icon\" href=\"\" type=\"link\">\n        Stay<span className=\"text-blue-zodiac\">cation.</span>\n      </Button>\n    </div>\n  );\n};\n","import React from 'react';\nimport Button from \"components/button\";\nimport BrandIcon from \"components/iconText\";\n\nexport default function Header({ location }) {\n  const getNavLinkClass = path => {\n    return location.pathname === path ? \" active\" : \"\"; \n  };\n\n  return (\n    <header className=\"spacing-sm\">\n      <div className=\"container\">\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\n          <BrandIcon />\n          <div className=\"collapse navbar-collapse\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className={`nav-item${getNavLinkClass(\"/\")}`}>\n                <Button className=\"nav-link\" type=\"link\" href=\"/\">\n                  Home\n                </Button>\n              </li>\n              <li className={`nav-item${getNavLinkClass(\"/browse-by\")}`}>\n                <Button className=\"nav-link\" type=\"link\" href=\"/browse-by\">\n                  Browse By\n                </Button>\n              </li>\n              <li className={`nav-item${getNavLinkClass(\"/stories\")}`}>\n                <Button className=\"nav-link\" type=\"link\" href=\"/stories\">\n                  Stories\n                </Button>\n              </li>\n              <li className={`nav-item${getNavLinkClass(\"/agents\")}`}>\n                <Button className=\"nav-link\" type=\"link\" href=\"/agents\">\n                  Agents\n                </Button>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\nimport Button from 'components/button';\nimport IconTraveler from \"images/ic_traveler.svg\";\nimport IconCities from \"images/ic_cities.svg\";\nimport IconTreasure from \"images/ic_treasure.svg\";\nimport ImageHero from \"images/img-hero.jpg\";\n\nexport default function Hero({ data, reference }) {\n  function showMostPicked() {\n    window.scrollTo({\n      top: reference.current.offsetTop - 30,\n      behavior: \"smooth\"\n    });\n  }\n\n  function numberFormat(number) {\n    const formatNumbering = new Intl.NumberFormat(\"id-ID\");\n\n    return formatNumbering.format(number);\n  }\n\n  return (\n    <section className=\"container pt-4\">\n      <div className=\"row align-items-center\">\n        <div id=\"hero-texts\" className=\"col-6 pr-5\">\n          <h1 className=\"font-weight-bold text-blue-zodiac mb-2 text-blue-zodiac\">\n            Forget Busy Work,<br/>Start Next Vacation\n          </h1>\n          <p className=\"mb-4 font-weight-light text-gray-500 w-75\">\n            We provide what you need to enjoy your holiday with family. Time to make another memorable moments.\n          </p>\n          <Button className=\"btn px-5\" hasShadow isPrimary onClick={showMostPicked}>\n            Show Me Now\n          </Button>\n          <div className=\"counter row\">\n            <div className=\"col-auto\">\n              <img width=\"36\" height=\"36\" src={IconTraveler} alt={`${data.travelers} Travelers`}/>\n              <h6 className=\"mt-2\">\n                {numberFormat(data.travelers)} <span className=\"text-gray-500 font-weight-light\">Travelers</span>\n              </h6>\n            </div>\n            <div className=\"col-auto\">\n              <img width=\"36\" height=\"36\" src={IconTreasure} alt={`${data.treasures} Treasures`}/>\n              <h6 className=\"mt-2\">\n                {numberFormat(data.treasures)} <span className=\"text-gray-500 font-weight-light\">Treasures</span>\n              </h6>\n            </div>\n            <div className=\"col-auto\">\n              <img width=\"36\" height=\"36\" src={IconCities} alt={`${data.cities} Cities`}/>\n              <h6 className=\"mt-2\">\n                {numberFormat(data.cities)} <span className=\"text-gray-500 font-weight-light\">Cities</span>\n              </h6>\n            </div>\n          </div>\n        </div>\n        <div id=\"hero-banner\" className=\"col-6 pl-5\">\n          <div className=\"image-hero-container\">\n            <div id=\"image-hero\" style={{ backgroundImage: `url(${ImageHero})` }}></div>\n            <div id=\"image-hero-frame\"></div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from 'react';\nimport Button from \"./button\";\nimport propTypes from 'prop-types';\n\nexport default function CardText({ data, mostPicked, isPopular }) {\n  return (\n    <Button type=\"link\" className={`products${mostPicked ? \" most-picked \" : \" \"}d-block`} href={ `/detail/${data._id}` }>\n      {\n        mostPicked || isPopular\n          ? mostPicked\n            ? <div className=\"badge\">\n                ${data.price}&nbsp;<span>per {data.unit}</span>\n              </div>\n            : <div className=\"badge\">\n                Popular&nbsp;<span>Choice</span>\n              </div>\n          : \"\"\n      }\n      <figure>\n        <img className=\"product-image\" src={ data.imageUrl } alt={ data.name } />\n      </figure>\n      <div className=\"product-name\">\n        <span className=\"name\">{ data.name }</span>\n        <span className=\"location\">{ data.city }, { data.country }</span>\n      </div>\n    </Button>\n  );\n}\n\nCardText.propTypes = {\n  mostPicked: propTypes.bool,\n  isPopular: propTypes.bool\n}","import React from 'react';\nimport CardText from \"components/card-text\";\n\nexport default function MostPicked({ data, reference }) {\n  return (\n    <section className=\"container\" ref={reference}>\n      <h4 className=\"mb-3\">Most Picked</h4>\n      <div className=\"container-grid\">\n        {\n          data.map( (item, index) => \n            <div key={ `mostpicked-${index}` } className={`item column-4 rowline-${ index === 0 ? \"2\" : \"1\" }`}>\n              <CardText data={ item } mostPicked />\n            </div>\n          )\n        }\n      </div>\n    </section>\n  )\n}\n","import React from 'react';\nimport CardText from 'components/card-text';\n\nexport default function Categories({ data }) {\n  return data.map( (category, index1) => category.items.length !== 0\n    ? <section className=\"container\" key={ `category-${index1}` }>\n        <h4 className=\"mb-3\">{ category.name }</h4>\n        <div className={category.items.length !== 0 ? \"container-grid\" : \"container d-flex\"}>\n          {\n            category.items.map((item, index2) => {\n              return (\n                <div className=\"item column-3 rowline-1\" key={ `category-item-${index2}` }>\n                  <CardText data={ item } isPopular={ item.isPopular } />\n                </div>\n              );\n            })\n          }\n        </div>\n      </section>\n    : \"\"\n  );\n}\n","import React, { Component } from 'react';\nimport HomeData from \"json/home\";\nimport Header from \"sections/header\";\nimport Hero from \"sections/hero\";\nimport MostPicked from \"sections/most-picked\";\nimport Categories from \"sections/categories\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.refMostPicked = React.createRef();\n  }\n\n  render() {\n    return (\n      <>\n        <Header {...this.props}></Header>\n        <Hero data={HomeData.hero} reference={this.refMostPicked} />\n        <MostPicked data={HomeData.mostPicked} reference={this.refMostPicked} />\n        <Categories data={HomeData.categories} />\n      </>\n    )\n  }\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'scss/index.scss';\nimport Home from 'pages/Home';\n\nfunction App() {\n    return <div className=\"App\">\n        <Router>\n            <Route path=\"/\" component={Home}></Route>\n        </Router>\n    </div>;\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}